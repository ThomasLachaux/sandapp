version: "3"

services:
  frontend:
    container_name: frontend
    depends_on:
      - server-a
    build:
      dockerfile: Dockerfile
      context: ./frontend
      args:
        VITE_API_URL: "http://localhost:3000"
    restart: always
    ports:
      - "8080:8080"
    networks:
      - front
  server-a:
    container_name: server-a
    depends_on:
      - rabbitmq
      - mongodb
      - server-b
    build:
      dockerfile: Dockerfile
      context: ./backend/server-a
    restart: always
    ports:
      - "3000:3000"
    environment:
      EXPRESS_PORT: 3000
      MONGO_URL: "mongodb://username:password@mongodb:27017/sandapp?authSource=sandapp" # example value, change it.
      JWT_SECRET: "AizJPFHsMkQ8WYqF1Q6YmWiD" # example value, change it.
      RABBITMQ_URL: "amqp://username:password@rabbitmq:5672" # example value, change it.
    networks:
      - front
      - rabbitmq
      - mongodb
  server-b:
    container_name: server-b
    depends_on:
      - rabbitmq
    build:
      dockerfile: Dockerfile
      context: ./backend/server-b
    restart: always
    environment:
      RABBITMQ_URL: "amqp://username:password@rabbitmq:5672"
    networks:
      - rabbitmq

  mongodb:
    container_name: mongodb
    image: "bitnami/mongodb:4.4"
    environment:
      MONGODB_ROOT_PASSWORD: "root" # example value, change it.
      MONGODB_USERNAME: "username" # example value, change it.
      MONGODB_PASSWORD: "password" # example value, change it.
      MONGODB_DATABASE: "sandapp"
    volumes:
      - "mongodb_data:/bitnami/mongodb"
    networks:
      - mongodb
  rabbitmq:
    image: "bitnami/rabbitmq:latest"
    environment:
      - RABBITMQ_USERNAME=username # example value, change it.
      - RABBITMQ_PASSWORD=password # example value, change it.
    networks:
      - rabbitmq
    volumes:
      - rabbitmq_data:/bitnami
  # You can base this service on the rabbitmq:3-management Docker Hub image.
  # You need to expose the RabbitMQ port 5672 to other containers
  # in this  docker-compose.yml, and for the managent from a Web
  # server you needs to make the map the RabbitMQ container port
  # 15672 to host port you wish to use for this.
  # A set of needed Docker instructions like 'image:' are shown
  # below, groups should set their values. Groups are free to
  # CRUD the set of instructions as they see fit.
  # rapid-runner-rabbit:
  #   image: rabbitmq:3-management
  #   ports:
  #   expose:
  #   networks:

  # much of the server-b service entry can be copied from server-a
  # service above. server-b directory Dockerfile has more
  # information.
  # A set of needed Docker instructions like 'image:' are shown
  # below, groups should set their values. Groups are free to
  # CRUD this set of instructions as they see fit.
  # server-b:
  # image:
  # depends_on:
  # command: ["./utils/wait-for-it.sh", "rapid-runner-rabbit:5672", "--",  "npm", "start"]
  # build:
  #   dockerfile:
  #   context:
  # expose:
  # networks:

networks:
  front:
    name: front
    driver: bridge
  mongodb:
    internal: true
    driver: bridge
  rabbitmq:
    internal: true
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local
